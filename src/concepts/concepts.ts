// This file is auto-generated by the `generate_imports.ts` script.
// Do not edit it manually, unless you know your concept requires a custom instantiation procedure.

import { SyncConcept } from "@engine";

export const Engine = new SyncConcept();

import { getDb } from "@utils/database.ts";

import CheckpointQuizConcept from "./CheckpointQuiz/CheckpointQuizConcept.ts";
import LibraryConcept from "./Library/LibraryConcept.ts";
import AnnotateConcept from "./Annotate/AnnotateConcept.ts";
import UserAuthConcept from "./UserAuth/UserAuthConcept.ts";
import RequestingConcept from "./Requesting/RequestingConcept.ts";
import FocusTimerConcept from "./FocusTimer/FocusTimerConcept.ts";
import ReadingProgressConcept from "./ReadingProgress/ReadingProgressConcept.ts";

export type { default as CheckpointQuizConcept } from "./CheckpointQuiz/CheckpointQuizConcept.ts";
export type { default as LibraryConcept } from "./Library/LibraryConcept.ts";
export type { default as AnnotateConcept } from "./Annotate/AnnotateConcept.ts";
export type { default as UserAuthConcept } from "./UserAuth/UserAuthConcept.ts";
export type { default as RequestingConcept } from "./Requesting/RequestingConcept.ts";
export type { default as FocusTimerConcept } from "./FocusTimer/FocusTimerConcept.ts";
export type { default as ReadingProgressConcept } from "./ReadingProgress/ReadingProgressConcept.ts";

// Initialize the database connection
export const [db, client] = await getDb();

export const CheckpointQuiz = Engine.instrumentConcept(new CheckpointQuizConcept(db));
export const Library = Engine.instrumentConcept(new LibraryConcept(db));
export const Annotate = Engine.instrumentConcept(new AnnotateConcept(db));
export const UserAuth = Engine.instrumentConcept(new UserAuthConcept(db));
export const Requesting = Engine.instrumentConcept(new RequestingConcept(db));
export const FocusTimer = Engine.instrumentConcept(new FocusTimerConcept(db));
export const ReadingProgress = Engine.instrumentConcept(new ReadingProgressConcept(db));
